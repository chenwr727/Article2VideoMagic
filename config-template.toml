[llm]
api_key = "sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
base_url = "https://api.deepseek.com"
model = "deepseek-chat"
prompt_writer = """请将以下网页内容转换为适合短视频平台的对话脚本和标题。

### 网页内容类型与调整策略
- **新闻类**：提取最新颖/争议性的观点，突出时效性和冲突点
- **教程类**：提取最实用的1-2个技巧，强调"秘诀"和"效果"
- **产品介绍**：突出最独特功能和解决的痛点，设计使用前后对比
- **观点类**：提取最有争议/反直觉的论点，设计反转或惊喜
- **知识科普**：选取最令人惊讶的事实，设计"知识反转"或"震惊时刻"

### 短视频特点要求
- **时长控制**：
  * 简单内容：30-45秒（约150-250字）
  * 复杂内容：60-90秒（约300-500字）
  * 核心观点必须在15秒内首次出现
- **前3秒吸引注意**：开场必须立即抓住观众注意力（提问/数据/反常识陈述）
- **快节奏**：对话节奏紧凑，句子简短，信息密度高
- **高能量**：对话有情绪波动，声调变化丰富
- **悬念递进**：内容层层深入，保持观众好奇心
- **关键词重复**：核心概念适当重复以加深印象
- **信息浓缩**：只保留最核心、最有趣的信息点
- **互动引导**：结尾可设计引导评论的问题或观点

### 角色设定
- 小简：年轻活泼，语速快，用词潮流，常有夸张反应
- 老陈：经验丰富，语气幽默，善用比喻，偶尔调侃小简

### 网页内容
[网页内容]

### 请按以下格式输出：

#### 目标平台与受众
- 平台：[推荐发布平台，如抖音/快手/视频号等]
- 目标受众：[年龄段/兴趣特征/需求痛点]

#### 爆款标题（3个，每个12字以内）
1. [标题1]
2. [标题2]
3. [标题3]

#### 对话脚本
小简：[对话内容]
老陈：[对话内容]
小简：[对话内容]
...
"""
prompt_reflector = """请对以下短视频对话脚本和标题进行专业评审，分析其在指定平台上对目标受众的表现潜力。

### 原网页核心信息提取
请先提取原网页内容中的3-5个核心信息点，并在评审中检查这些信息是否在脚本中得到准确传达。

### 平台特性考量
- **抖音**：15秒内必须抓住注意，强调创意和反转，重视音乐节奏感
- **快手**：重视真实性和接地气，需要更多生活场景和实用性
- **视频号**：适合中年用户，节奏可稍慢，但内容需更深度和权威
- **小红书**：适合种草和知识分享，需要更多"干货"和可操作建议

### 短视频评审标准（1-10分+具体建议）
1. **信息准确性**：内容是否忠实传达了原网页的核心信息，有无失真或夸大
2. **首屏吸引力**：前3秒能否立即抓住指定受众注意力，有何具体改进方向
3. **标题契合度**：标题是否与内容匹配且对目标受众有吸引力，需如何优化
4. **完播率预估**：针对目标受众，内容是否能让观众看到最后，断点在哪里
5. **信息密度**：信息是否浓缩精炼，有无冗余，如何更高效传递核心信息
6. **节奏适配性**：对话节奏是否适合目标平台的主流内容风格，如何调整
7. **情绪设计**：是否有明确的情绪曲线和高点，具体在哪些地方需要强化
8. **记忆点设计**：有哪些潜在金句或创意点，如何强化使其更易记忆和传播
9. **互动设计**：结尾或内容中是否有能激发互动的元素，如何提升互动可能
10. **合规性评估**：内容是否符合平台内容政策，有无敏感或争议点需调整

### 网页内容
[网页内容]

### 初始脚本
[初始脚本]

### 评审结果
#### 核心信息传达
原网页核心信息点：
1. [信息点1]
2. [信息点2]
3. [信息点3]
...

信息准确性评分：[分数] - [详细评价，指出失真或缺失的信息]

#### 内容评分
首屏吸引力：[分数] - [具体问题和改进建议]
标题契合度：[分数] - [具体问题和改进建议]
完播率预估：[分数] - [具体问题和改进建议]
信息密度：[分数] - [具体问题和改进建议]
节奏适配性：[分数] - [具体问题和改进建议]
情绪设计：[分数] - [具体问题和改进建议]
记忆点设计：[分数] - [具体问题和改进建议]
互动设计：[分数] - [具体问题和改进建议]
合规性评估：[分数] - [具体问题和改进建议]

### 最佳标题评选
从给出的3个标题中，最适合目标平台和受众的是：[最佳标题]
推荐理由：[具体分析]
优化建议：[如何进一步提升标题效果]

### 改进建议清单
1. 内容准确性：[如何确保核心信息不失真]
2. 开场优化：[3秒内如何更好抓住目标受众]
3. 节奏调整：[针对目标平台的节奏优化方案]
4. 情绪设计：[情绪曲线优化和高点设计]
5. 记忆点强化：[如何打造1-2个有传播力的金句]
6. 互动增强：[如何设计更有效的互动引导]
7. 角色对话优化：[小简和老陈的对话如何更贴合角色设定]
"""
prompt_rewriter = """请根据评审意见，将初始脚本彻底重构为高传播力的短视频内容，同时确保信息准确传达。

### 重构优化目标
1. **必须使用小简和老陈作为固定角色**：确保对话风格符合角色设定
   - 小简：表达要更年轻活泼，多用潮流词汇，反应要夸张
   - 老陈：语气必须更幽默，多用生动比喻，适当调侃小简
2. **信息准确性为底线**：所有核心信息必须100%准确传达，不得篡改原意
3. **大幅提升开场冲击力**：前3秒必须制造强烈好奇心或情绪冲击
4. **极致压缩信息密度**：每句话必须承载有效信息，删除一切废话
5. **打造爆款节奏感**：控制语句长度，穿插快慢节奏，设计1-2处明显停顿制造期待

### 重构关键方法
1. **开场重塑**：
   - 使用疑问句/争议性陈述/惊人数据/反常识断言开场
   - 确保首句不超过15个字
   - 必须在开场5秒内抛出核心观点
2. **对话节奏优化**：
   - 小简说话不超过25字/句
   - 老陈说话不超过30字/句
   - 交替使用长短句创造节奏感
   - 设置2-3处情绪高潮
3. **金句设计**：
   - 创造1个8字以内、朗朗上口的金句
   - 该金句必须包含核心信息点
   - 在脚本中重复出现2-3次
4. **互动设计**：
   - 在结尾设计1个简单明确的互动引导
   - 问题必须与内容直接相关
   - 问题设计要能激发观众分享个人经验

### 网页内容
[网页内容]

### 初始脚本
[初始脚本]

### 评审意见
[评审意见]

### 请按以下格式输出最终优化结果：
```json
{
  "platform": "目标平台名称",
  "audience": "具体受众描述",
  "title": "最终优化标题，10字以内",
  "quotes": "8字以内的核心金句",
  "information": [
    "信息点1（15字以内）",
    "信息点2（15字以内）",
    "信息点3（15字以内）"
  ],
  "dialogues": [
    {
      "speaker": "小简或老陈",
      "content": "对话内容"
    },
    ...
  ],
  "interaction": "结尾互动设计",
  "effect": "简短说明优化后内容的预期传播效果"
}
"""

[tts]
source = "dashscope"

[tts.dashscope]
api_key = "sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
model = "cosyvoice-v1"
voices = ["longwan", "longcheng"]

[tts.edge]
voices = ["zh-CN-XiaoyiNeural", "zh-CN-YunyangNeural"]

[tts.kokoro]
model = "./models/kokoro/kokoro-v1_1-zh.pth"
voices = [
  "./models/kokoro/voices/zf_xiaoyi.pt",
  "./models/kokoro/voices/zm_yunxi.pt",
]
config = "./models/kokoro/config.json"
lang_code = "z"

[video]
fps = 24
background_audio = "./resource/bgm.mp3"
width = 1080
height = 1920

[subtitle]
font = "./fonts/DreamHanSans-W20.ttc"
width_ratio = 0.8
font_size_ratio = 17
position_ratio = 0.667
color = "white"
stroke_color = "black"
stroke_width = 1
text_align = "center"

[api]
database_url = "sqlite+aiosqlite:///tasks.db"
app_port = 8000
max_concurrent_tasks = 1
task_timeout_seconds = 600

[material]
source = "pixabay"
minimum_duration = 3
prompt = """### 角色：批量视频搜索词生成器

#### 目标：
根据输入的 JSON 数据（包含相声对话内容），为每个 `content` 字段生成 5 个相关的英语视频搜索词，并返回统计信息。

#### 约束条件：
1. **每个 `content` 字段** 必须生成 5 个相关的搜索词。
2. 输出必须是一个 JSON 数组，其中每个条目包含 `id` 和对应的 `search_terms` 数组。
3. 每个搜索词应由 **1-3 个英文单词** 组成，且必须与视频内容的主题或情节密切相关。
4. **`search_terms` 数组的长度必须为 5**，即每个对话段落都必须生成 5 个相关的搜索词。
5. 搜索词应简洁且贴合对话内容，能够有效地捕捉视频的核心主题或情节。
6. 必须全部使用英文生成搜索词，不允许使用中文。
7. 不返回原始对话内容，仅返回每个 `id` 和生成的 5 个搜索词。

#### 输入格式：
```json
[
  {
    "id": 1,
    "content": "台词内容1"
  },
  {
    "id": 2,
    "content": "台词内容2"
  },
  ...
]
```

#### 输出格式：
```json
{
  "count": 2,
  "dialogues": [
    {
      "id": 1,
      "search_terms": ["search term 1", "search term 2", "search term 3", "search term 4", "search term 5"]
    },
    {
      "id": 2,
      "search_terms": ["search term 1", "search term 2", "search term 3", "search term 4", "search term 5"]
    }
  ]
}
```
"""

[material.pexels]
api_key = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
locale = "zh-CN"

[material.pixabay]
api_key = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
lang = "zh"
video_type = "all"
