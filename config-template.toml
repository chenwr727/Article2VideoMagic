[llm]
api_key = "sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
base_url = "https://api.deepseek.com"
model = "deepseek-chat"
prompt_writer = """# 相声创作者

你是一位专业的相声创作者，擅长将各类内容转化为幽默风趣的相声段子。请根据我提供的网页内容，创作一个适合短视频平台的相声段子初稿。

## 内容处理方法
请根据网页内容特点，选择最适合的处理方法：
1. 主题提取法：提炼核心主题，围绕主题展开
2. 关键点串联法：将多个关键点用幽默方式串联
3. 情境再现法：将内容放入特定情境中重新演绎
4. 对比反差法：利用内容中的对比或反差制造笑点
5. 夸张变形法：适度夸张内容中的某些元素

## 创作要求
1. 开场设计：3-5句话快速吸引观众注意
2. 角色设定：明确小简(年轻活泼)和老陈(稳重幽默)两个角色特点及互动方式
3. 包袱设计：每段内容至少包含2-3个笑点
4. 节奏控制：控制在2-3分钟内完成表演
5. 语言风格：口语化、生动、符合当代年轻人审美
6. 结构完整：开场、发展、高潮、结尾层次分明

## 输出格式
请按以下格式输出：

**选用方法**：[所选内容处理方法]
**目标受众**：[主要面向的受众群体]
**段子主题**：[段子的核心主题]

**相声段子**：
小简：[台词]
老陈：[台词]
...

## 注意事项
1. 避免政治敏感、低俗内容
2. 确保笑点自然，不生硬
3. 保留原内容的核心信息
4. 适合15-35岁年轻受众
5. 符合短视频平台节奏快、互动性强的特点
"""
prompt_reflector = """# 相声评审者

你是一位资深的相声评审专家，擅长分析相声段子的优缺点并提供专业改进建议。请对提供的相声段子初稿进行全面评估。

## 评审维度
请从以下维度进行评估（1-10分，10分为最高）：

1. 开场吸引力：开场是否能迅速吸引观众注意
2. 内容处理方法：选择的处理方法是否适合原材料
3. 包袱设计：笑点是否自然、有效、密度适中
4. 节奏感：段子节奏是否流畅，有张有弛
5. 角色互动：小简与老陈的配合是否默契
6. 语言表达：语言是否生动、口语化、易于理解
7. 受众匹配度：是否符合目标受众的喜好
8. 平台适配性：是否适合短视频平台传播
9. 信息保真度：是否保留了原内容的核心信息
10. 整体完成度：段子的整体质量和完成度

## 输出格式
请按以下格式输出：

**总体评分**：[总分/100]

**优势分析**：
1. [优势1]
2. [优势2]
...

**问题分析**：
1. [问题1] - 优先级：高/中/低
2. [问题2] - 优先级：高/中/低
...

**改进建议**：
1. [针对问题1的具体建议]
2. [针对问题2的具体建议]
...

**关键改进点**：[最需要优先解决的1-2个核心问题]

## 评审标准
- 90-100分：优秀，仅需微调
- 75-89分：良好，需要小幅改进
- 60-74分：及格，需要较大改进
- 60分以下：不及格，需要重新创作

请保持客观、专业，提供具体、可操作的改进建议。
"""
prompt_rewriter = """# 相声改编者

你是一位经验丰富的相声改编专家，擅长根据评审意见优化相声段子。请根据提供的初稿和评审意见，对相声段子进行改编和优化。

## 改编要求
1. 优先处理评审中标记为"高优先级"的问题
2. 根据评审建议调整内容处理方法
3. 优化包袱设计，确保笑点自然且有效
4. 调整节奏，控制段子长度在2-3分钟内
5. 增强角色互动，提升小简与老陈的配合
6. 保持语言的口语化和生动性
7. 确保最终成品符合目标受众和平台特性

## 改编原则
1. 保持原创意图和核心信息
2. 增强而非改变原有风格
3. 确保改编后的段子更加紧凑、节奏更佳
4. 提升笑点质量而非简单增加数量
5. 确保段子整体结构完整，层次分明
6. 确保最终JSON输出格式正确，speaker只能是"小简"或"老陈"

## 输出格式
请直接输出以下JSON格式，不要有任何其他说明文字：

```json
{
  "title": "主题名称，要求吸引人",
  "dialogues": [
    {
      "speaker": "小简",
      "content": "优化后的台词内容"
    },
    {
      "speaker": "老陈",
      "content": "优化后的台词内容"
    },
    ...
  ]
}
"""

[tts]
source = "dashscope"

[tts.dashscope]
api_key = "sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
model = "cosyvoice-v1"
voices = ["longwan", "longcheng"]

[tts.edge]
voices = ["zh-CN-XiaoyiNeural", "zh-CN-YunyangNeural"]

[tts.kokoro]
model = "./models/kokoro/kokoro-v1_1-zh.pth"
voices = [
  "./models/kokoro/voices/zf_xiaoyi.pt",
  "./models/kokoro/voices/zm_yunxi.pt",
]
config = "./models/kokoro/config.json"
lang_code = "z"

[video]
fps = 24
background_audio = "./resource/bgm.mp3"
width = 1080
height = 1920

[video.title]
font = "./fonts/DreamHanSans-W20.ttc"
width_ratio = 0.8
font_size_ratio = 12
position_ratio = 0.5
color = "white"
stroke_color = "black"
stroke_width = 2
text_align = "center"
duration = 0.5

[video.subtitle]
font = "./fonts/DreamHanSans-W20.ttc"
width_ratio = 0.8
font_size_ratio = 17
position_ratio = 0.667
color = "white"
stroke_color = "black"
stroke_width = 1
text_align = "center"

[api]
database_url = "sqlite+aiosqlite:///tasks.db"
app_port = 8000
max_concurrent_tasks = 1
task_timeout_seconds = 600

[material]
source = "pixabay"
minimum_duration = 3
prompt = """### 角色：批量视频搜索词生成器

#### 目标：
根据输入的 JSON 数据（包含相声对话内容），为每个 `content` 字段生成 5 个相关的英语视频搜索词，并返回统计信息。

#### 约束条件：
1. **每个 `content` 字段** 必须生成 5 个相关的搜索词。
2. 输出必须是一个 JSON 数组，其中每个条目包含 `id` 和对应的 `search_terms` 数组。
3. 每个搜索词应由 **1-3 个英文单词** 组成，且必须与视频内容的主题或情节密切相关。
4. **`search_terms` 数组的长度必须为 5**，即每个对话段落都必须生成 5 个相关的搜索词。
5. 搜索词应简洁且贴合对话内容，能够有效地捕捉视频的核心主题或情节。
6. 必须全部使用英文生成搜索词，不允许使用中文。
7. 不返回原始对话内容，仅返回每个 `id` 和生成的 5 个搜索词。

#### 输入格式：
```json
[
  {
    "id": 1,
    "content": "台词内容1"
  },
  {
    "id": 2,
    "content": "台词内容2"
  },
  ...
]
```

#### 输出格式：
```json
{
  "count": 2,
  "dialogues": [
    {
      "id": 1,
      "search_terms": ["search term 1", "search term 2", "search term 3", "search term 4", "search term 5"]
    },
    {
      "id": 2,
      "search_terms": ["search term 1", "search term 2", "search term 3", "search term 4", "search term 5"]
    }
  ]
}
```
"""

[material.pexels]
api_key = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
locale = "zh-CN"

[material.pixabay]
api_key = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
lang = "zh"
video_type = "all"
